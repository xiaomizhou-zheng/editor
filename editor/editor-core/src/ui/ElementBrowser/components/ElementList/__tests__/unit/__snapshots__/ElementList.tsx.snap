// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ElementList should match snapshot 1`] = `
.emotion-0 {
  position: relative;
}

.emotion-1 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-box-flex-flow: row wrap;
  -webkit-flex-flow: row wrap;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  -webkit-justify-content: flex-start;
  justify-content: flex-start;
  overflow: hidden;
  padding: 2px;
}

.emotion-1 .ReactVirtualized__Collection {
  border-radius: 3px;
  outline: none;
}

.emotion-1 .ReactVirtualized__Collection:focus {
  box-shadow: 0 0 0 2px var(--ds-border-focused, #4C9AFF);
}



.emotion-1 .ReactVirtualized__Collection__innerScrollContainer div[class='element-item-wrapper']:last-child {
  padding-bottom: 4px;
}

<WithAnalyticsContext(ElementList)
  items={
    Array [
      Object {
        "action": [MockFunction],
        "description": "Item 1 description",
        "name": "item-1",
        "title": "Item 1",
      },
      Object {
        "action": [MockFunction],
        "description": "Item 2 description",
        "name": "item-2",
        "title": "Item 2",
      },
      Object {
        "action": [MockFunction],
        "description": "Item 3 description",
        "name": "item-3",
        "title": "Item 3",
      },
      Object {
        "action": [MockFunction],
        "description": "Item 4 description",
        "name": "item-4",
        "title": "Item 4",
      },
      Object {
        "action": [MockFunction],
        "description": "Item 5 description",
        "name": "item-5",
        "title": "Item 5",
      },
    ]
  }
  mode="full"
  onEnterKeyPress={[MockFunction]}
  onInsertItem={[MockFunction]}
  selectedItemIndex={1}
  setColumnCount={[MockFunction]}
  setFocusedItemIndex={[MockFunction]}
  setSelectedItemIndex={[MockFunction]}
>
  <AnalyticsContext
    data={
      Object {
        "component": "ElementList",
      }
    }
  >
    <ElementList
      items={
        Array [
          Object {
            "action": [MockFunction],
            "description": "Item 1 description",
            "name": "item-1",
            "title": "Item 1",
          },
          Object {
            "action": [MockFunction],
            "description": "Item 2 description",
            "name": "item-2",
            "title": "Item 2",
          },
          Object {
            "action": [MockFunction],
            "description": "Item 3 description",
            "name": "item-3",
            "title": "Item 3",
          },
          Object {
            "action": [MockFunction],
            "description": "Item 4 description",
            "name": "item-4",
            "title": "Item 4",
          },
          Object {
            "action": [MockFunction],
            "description": "Item 5 description",
            "name": "item-5",
            "title": "Item 5",
          },
        ]
      }
      mode="full"
      onEnterKeyPress={[MockFunction]}
      onInsertItem={[MockFunction]}
      selectedItemIndex={1}
      setColumnCount={[MockFunction]}
      setFocusedItemIndex={[MockFunction]}
      setSelectedItemIndex={[MockFunction]}
    >
      <Memo()>
        <Noop />
<div
          className="emotion-0"
          tabIndex={-1}
        >
          <Memo()
            setWidth={[Function]}
          >
            <Memo()
              setWidth={[Function]}
            >
              <div
                style={
                  Object {
                    "display": "block",
                    "position": "absolute",
                    "width": "100%",
                  }
                }
              />
            </Memo()>
          </Memo()>
        </div>
      </Memo()>
      <Noop />
<div
        className="emotion-1"
        data-testid="element-items"
      />
    </ElementList>
  </AnalyticsContext>
</WithAnalyticsContext(ElementList)>
`;
