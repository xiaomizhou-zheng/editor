/** @jsx jsx */

import React from 'react';
import { PureComponent, ReactNode } from 'react';
import { jsx } from '@emotion/react';
import decisionListStyles from './listStyle';

export interface Props {
  children?: ReactNode;
}

export default class DecisionList extends PureComponent<Props, {}> {
  render() {
    const { children } = this.props;

    if (!children) {
      return null;
    }

    // Data attributes are required for copy and paste from rendered content
    // to the editor to preserve the decision.
    // This allows the editor to differentiate between numbered and ordered lists,
    // and action items, which all share the common `<li>` element.
    // The value of `data-decision-local-id` should be discarded upon paste, with a
    // a new uuid generated by the editor for the cloned content.
    return (
      <ol
        css={decisionListStyles}
        data-decision-list-local-id=""
        data-node-type="decisionList"
      >
        {React.Children.map(children, (child, idx) => {
          const { localId } = (child as PureComponent).props as {
            localId: string;
          };
          return (
            <li
              key={idx}
              data-decision-local-id={localId || ''}
              data-decision-state="DECIDED"
            >
              {child}
            </li>
          );
        })}
      </ol>
    );
  }
}
